
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">
        <li class="page-item">
            <button class="page-link" disabled="@_isFirstPage" @onclick="GoToPreviousPage">
                <span aria-hidden="true">&laquo;</span>
            </button>
        </li>
        @if (_pageItems is not null)
        {
            @foreach (var pageItem in _pageItems)
            {
                <li class="page-item @(pageItem.IsActive ? "active" : "")">
                    <button class="page-link @(pageItem.IsEnabled ? "" : "disabled")"
                    @onclick="(() => GoToPage(pageItem))">@pageItem.Text</button>
                </li>
            }
        }
        <li class="page-item">
            <button class="page-link" disabled="@_isLastPage" @onclick="GoToNextPage">
                <span aria-hidden="true">&raquo;</span>
            </button>
        </li>
    </ul>
</nav>

@code {
    [Parameter]
    public int totalPages { get; set; }
    [Parameter]
    public EventCallback<int> OnPageChange { get; set; }

    private int _currentPage = 1;
    private List<PageItem> _pageItems;
    private int _radius = 2;

    private bool _isFirstPage => _currentPage == 1;
    private bool _isLastPage => _currentPage == totalPages;

    // create page item
    protected override void OnParametersSet()
    {
        _pageItems = new();

        for (int pageNumber = 1; pageNumber <= totalPages; pageNumber++)
        {
            if (pageNumber >= _currentPage - _radius && pageNumber < _currentPage + _radius)
            {
                _pageItems.Add(new PageItem(pageNumber.ToString(), pageNumber, true, (pageNumber == _currentPage)));
            }
        }
    }

    async Task GoToPreviousPage()
    {
        if (!_isFirstPage)
            _currentPage--;

        await OnPageChange.InvokeAsync(_currentPage);
    }
    async Task GoToNextPage()
    {
        if (!_isLastPage)
            _currentPage++;

        await OnPageChange.InvokeAsync(_currentPage);
    }

    async Task GoToPage(PageItem pageItem)
    {
        if (_currentPage == pageItem.PageIndex || !pageItem.IsEnabled)
            return;

        _currentPage = pageItem.PageIndex;

        await OnPageChange.InvokeAsync(_currentPage);
    }
}