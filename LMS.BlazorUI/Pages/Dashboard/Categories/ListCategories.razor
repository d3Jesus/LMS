
@page "/categories"
@layout DashboardLayout

@inject IJSRuntime JS
@inject ICategoryService Service

<Breadcrumb title="Categories"/>

<CardComponent title="List of Categories">

    <bodyFragment>
        <div class="table-responsive">
            <table class="table table-sm table-hover" id="categoryTable" style="width: 100%;" cellspacing="0">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @if (categories is not null)
                    {
                        foreach (var category in categories)
                        {
                            <tr>
                                <td scope="row">@category.Id</td>
                                <td>@category.CategoryName</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </bodyFragment>

    <footerFragment>
        <button type="button" class="btn btn-outline-success" @onclick="@DisplayModal">
            <i class="bi bi-plus"></i> New
        </button>
    </footerFragment>

</CardComponent>

<ModalComponent title="Add Category" cssStyle="@style">

    <bodyFragment>
        <AddCategory @ref="child" />
    </bodyFragment>

    <footerFragment>
        <button type="submit" class="btn btn-outline-success" @onclick="@(() => child.OnValidSubmit())">
            <i class="bi bi-save"></i> Save
        </button>
    </footerFragment>

</ModalComponent>

@code {
    private IEnumerable<Category> categories;
    private string style { get; set; }
    private AddCategory child;

    protected override async Task OnInitializedAsync()
    {
        categories = await Service.GetAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JS.InvokeVoidAsync("addDatatable", "#categoryTable");
    }

    private void DisplayModal()
    {
        style = "display: block;";
    }
}
