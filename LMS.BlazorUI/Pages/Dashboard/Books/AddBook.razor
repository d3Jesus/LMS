@page "/books/new"
@layout DashboardLayout

@inject IBookService BookService
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager


<Breadcrumb title="Books" />
<EditForm Model="@book" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <CardComponent title="New Book">

        <bodyFragment>

            <div class="row">
                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Title</label>
                    <input type="text" class="form-control"
                            placeholder="Book Title" autocomplete="off"
                            @bind-value="book.Title">
                    <span class="text-danger"><ValidationMessage For="@(() => book.Title)"></ValidationMessage></span>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Description</label>
                    <input type="text" class="form-control"
                            placeholder="Book Description" autocomplete="off"
                            @bind-value="book.Description">
                    <span class="text-danger"><ValidationMessage For="@(() => book.Description)"></ValidationMessage></span>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Edition</label>
                    <input type="text" class="form-control"
                            placeholder="Book Edition" autocomplete="off"
                            @bind-value="book.Edition">
                    <span class="text-danger"><ValidationMessage For="@(() => book.Edition)"></ValidationMessage></span>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">ISBN</label>
                    <input type="text" class="form-control"
                            placeholder="XXX-X-XX-XXXXXX-X" autocomplete="off"
                            @bind-value="book.ISBN">
                    <span class="text-danger"><ValidationMessage For="@(() => book.ISBN)"></ValidationMessage></span>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Book Category</label>
                    <select @bind="book.CategoryId" class="form-control" aria-required="true">
                        @if (categories != null)
                            @foreach (var category in categories)
                            {
                                <option value=@category.Id>@category.CategoryName</option>
                            }
                    <span class="text-danger"><ValidationMessage For="@(() => book.CategoryId)"></ValidationMessage></span>
                    </select>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Cover</label>
                        <div class="form-control">
                        <InputFile OnChange="@LoadFiles" />
                        </div>
                        <input type="hidden" class="form-control" @bind-value="book.Size" />
                    <span class="text-danger"><ValidationMessage For="@(() => book.Size)"></ValidationMessage></span>
                </div>

                <div class="form-group col-lg-4 col-md-6">
                    <label class="form-label">Price</label>
                    <input type="text" class="form-control"
                            placeholder="Book Price" autocomplete="off"
                            @bind-value="book.Price">
                    <span class="text-danger"><ValidationMessage For="@(() => book.Price)"></ValidationMessage></span>
                </div>
            </div>

            <BookAuthorsTable OnAuthorSelected="SelectedAuthor"></BookAuthorsTable>
        
        </bodyFragment>

        <footerFragment>
            <div class="text-center">
                <NavLink href="books" class="btn btn-outline-secondary">
                    Cancel
                </NavLink>
                <button type="submit" class="btn btn-outline-success">
                    <i class="bi bi-save"></i> Save
                </button>
            </div>
        </footerFragment>
    </CardComponent>
</EditForm>

@code {
    private AddBookViewModel book = new();
    private IEnumerable<Category> categories;
    private string FileName = string.Empty;
    private int size = 0;

    private List<IBrowserFile> loadedFiles = new();
    private bool isLoading;

    private void SelectedAuthor(List<BookAuthorsViewModel> author)
    {
        book.BookAuthors = author;
    }

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        IBrowserFile browserFile = e.GetMultipleFiles(1).FirstOrDefault();
        book.File = browserFile;
        book.Size = browserFile.Size;
    }

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetAsync();
    }

    private async Task OnValidSubmit()
    {
        var result = (await BookService.CreateAsync(book)).Succeeded;
        string message = result ? ResponseStatus.SUCCESS : ResponseStatus.ERROR;

        NavigationManager.NavigateTo($"books/{message}", true);
    }
}
