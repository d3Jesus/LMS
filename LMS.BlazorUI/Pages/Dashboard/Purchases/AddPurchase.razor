@page "/purchase/new"
@layout DashboardLayout

<Breadcrumb title="New Purchase" />

<CardComponent title="New Purchase">

    <bodyFragment>
        <SearchBookComponent
            OnSelectedItem="OnSelectedBook">
        </SearchBookComponent>

        <div class="table-responsive">
            <table class="display table" style="width: 100%;" cellspacing="0">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Unit Price</th>
                        <th>Number Of Copies</th>
                        <th style="text-align:right">Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if(items != null)
                    {
                        @foreach(var item in items)
                        {
                            <tr>
                                <td>
                                    @item.BookTitle
                                </td>
                                <td>
                                    @item.BookPrice.ToString("0,0.00")
                                </td>
                                <td class="col-lg-2">
                                    <input type="number" min="1" class="form-control"
                                        @bind-value="@item.NumberOfCopies" 
                                        @bind-value:event="oninput"
                                        @onchange="@(()=>OnNumberOfCopiesChanged(item))"/>
                                </td>
                                <td align="right">
                                    @item.GrossPrice.ToString("0,0.00")
                                </td>
                                <td>
                                    <button type="button" class="btn btn-link text-danger" @onclick="@(()=>RemoveItem(item))">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr style="font-size:0.75rem;">
                        <td colspan="3" align="right">Total</td>
                        <td align="right">@Total.ToString("0,0.00")</td>
                    </tr>                    
                </tfoot>
            </table>  
        </div>
    </bodyFragment>

    <footerFragment>
        
        <div class="text-center">
            <a class="btn btn-outline-secondary" href="/purchases">
                Cancel
            </a>
            <button type="submit" class="btn btn-outline-success">
                <i class="bi bi-save"></i> Save
            </button>
        </div>

    </footerFragment>

</CardComponent>

@code {
    private decimal Total;

    private List<AddPurchaseItemViewModel> items { get; set; }

    protected override void OnInitialized()
    {
        items = new();
    }

    private void OnSelectedBook(GetBookViewModel item)
    {
        if (!items.Any(x => x.BookTitle.Equals(item.Title, StringComparison.OrdinalIgnoreCase)))
        {
            AddPurchaseItemViewModel newItem = new()
            {
                BookId = item.Id,
                BookTitle = item.Title,
                BookPrice = item.Price,
                GrossPrice = item.Price
            };
            this.items.Add(newItem);
        }
    }

    private void RemoveItem(AddPurchaseItemViewModel item)
    {
        this.items.Remove(item);

        DisplayTotals();
    }

    private void OnNumberOfCopiesChanged(AddPurchaseItemViewModel item)
    {
        item.GrossPrice = item.BookPrice * item.NumberOfCopies;
        DisplayTotals();
    }

    private void DisplayTotals()
    {
        Total = 0;

        foreach(var item in items)
        {
            Total += item.GrossPrice;
        }
    }
}