@page "/authors/new"
@layout DashboardLayout

@inject IAuthorService Service
@inject NavigationManager NavigationManager

<div class="pagetitle">
    <h1>New Author</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <NavLink href="dashboard">
                    Dashboard
                </NavLink>
            </li>
            <li class="breadcrumb-item">
                <NavLink href="authors">
                    Authors
                </NavLink>
            </li>
            <li class="breadcrumb-item active">New Author</li>
        </ol>
    </nav>
</div>

<EditForm Model="@author" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
        <CardComponent title="New Author">
            <bodyFragment>

                <div class="form-group mb-2">
                    <label class="form-label">First name</label>
                    <input type="text" class="form-control"
                        placeholder="John" autocomplete="off"
                        @bind-value="author.FirstName">
                    <span class="text-danger"><ValidationMessage For="@(() => author.FirstName)"></ValidationMessage></span>
                </div>

                <div class="form-group mb-2">
                    <label class="form-label">Last name</label>
                    <input type="text" class="form-control"
                        placeholder="Doe" autocomplete="off"
                        @bind-value="author.LastName">
                    <span class="text-danger"><ValidationMessage For="@(() => author.LastName)"></ValidationMessage></span>
                </div>

                <div class="form-group mb-2">
                    <label class="form-label">Nationality</label>
                    <input type="text" class="form-control"
                        placeholder="Mozambican" autocomplete="off"
                        @bind-value="author.Nationality">
                    <span class="text-danger"><ValidationMessage For="@(() => author.Nationality)"></ValidationMessage></span>
                </div>

            </bodyFragment>
            <footerFragment>
                <a class="btn btn-outline-secondary" href="/authors">
                    Cancel
                </a>
                <button type="submit" class="btn btn-outline-success">
                    <i class="bi bi-save"></i> Save
                </button>
            </footerFragment>
        </CardComponent>
</EditForm>

@code {
    private Author author = new Author();

    public void OnValidSubmit()
    {
        var result = Service.CreateAsync(author);

        NavigationManager.NavigateTo("authors", true);
    }

}
